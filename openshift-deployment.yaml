---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: redhat-quest-sa
  labels:
    app: redhat-quest-game
  annotations:
    description: "Service account for Red Hat Quest game"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redhat-quest-config
  labels:
    app: redhat-quest-game
    component: configuration
data:
  # JavaScript configuration that will be injected into the game
  app-config.js: |
    // Red Hat Quest Game Configuration
    // This file is automatically mounted from ConfigMap
    
    window.DEPLOYMENT_CONFIG = {
      // WebSocket URL for real-time game communication
      websocketUrl: 'wss://redhat-quest-server-gcolman1-dev.apps.rm2.thpm.p1.openshiftapps.com/game-control',
      
      // Environment settings
      environment: 'production',
      
      // Game configuration
      game: {
        debug: false,
        logLevel: 'info',
        targetFPS: 60
      },
      
      // UI configuration
      ui: {
        showDebugInfo: false,
        autoConnect: true,
        enableAnimations: true,
        enableSound: true
      },
      
      // WebSocket configuration
      websocket: {
        maxReconnectAttempts: 5,
        reconnectDelay: 3000,
        autoConnect: true
      }
    };
    
    // Set the WebSocket URL for immediate use
    window.WEBSOCKET_URL = window.DEPLOYMENT_CONFIG.websocketUrl;
    
    console.log('Red Hat Quest: Loaded deployment configuration', window.DEPLOYMENT_CONFIG);

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redhat-quest-game
  labels:
    app: redhat-quest-game
    app.kubernetes.io/name: redhat-quest-game
    app.kubernetes.io/component: game-frontend
    app.kubernetes.io/part-of: redhat-quest-app
    app.kubernetes.io/version: "2.1-websocket"
    app.openshift.io/runtime: nodejs
  annotations:
    app.openshift.io/route-disabled: 'false'
    description: "Red Hat Quest Game frontend with WebSocket support"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redhat-quest-game
  template:
    metadata:
      labels:
        app: redhat-quest-game
        deployment: redhat-quest-game
    spec:
      serviceAccountName: redhat-quest-sa
      containers:
      - name: redhat-quest-game
        image: quay.io/uk_redhatdemo/summitconnect/redhat-quest:latest
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: HTTP_PORT
          value: "8000"
        - name: WEBSOCKET_URL
          value: "wss://redhat-quest-server-gcolman1-dev.apps.rm2.thpm.p1.openshiftapps.com/game-control"
        volumeMounts:
        - name: config-volume
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          runAsNonRoot: true
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
      volumes:
      - name: config-volume
        configMap:
          name: redhat-quest-config
          items:
          - key: app-config.js
            path: app-config.js
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      dnsPolicy: ClusterFirst

---
apiVersion: v1
kind: Service
metadata:
  name: redhat-quest-game-service
  labels:
    app: redhat-quest-game
    service-type: http
  annotations:
    description: "HTTP service for the Red Hat Quest game web interface"
spec:
  type: ClusterIP
  selector:
    app: redhat-quest-game
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: redhat-quest-game-route
  labels:
    app: redhat-quest-game
    route-type: game
  annotations:
    description: "Main game application route"
    haproxy.router.openshift.io/timeout: 60s
    haproxy.router.openshift.io/hsts_header: "max-age=31536000;includeSubDomains;preload"
spec:
  to:
    kind: Service
    name: redhat-quest-game-service
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: redhat-quest-admin-route
  labels:
    app: redhat-quest-game
    route-type: admin
  annotations:
    description: "Admin panel route for game management"
    haproxy.router.openshift.io/timeout: 60s
spec:
  path: /admin.html
  to:
    kind: Service
    name: redhat-quest-game-service
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: redhat-quest-leaderboard-route
  labels:
    app: redhat-quest-game
    route-type: leaderboard
  annotations:
    description: "Leaderboard route for viewing game statistics"
    haproxy.router.openshift.io/timeout: 60s
spec:
  path: /leaderboard.html
  to:
    kind: Service
    name: redhat-quest-game-service
    weight: 100
  port:
    targetPort: http
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: redhat-quest-network-policy
  labels:
    app: redhat-quest-game
spec:
  podSelector:
    matchLabels:
      app: redhat-quest-game
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: openshift-ingress
    ports:
    - protocol: TCP
      port: 8000
  egress:
  - {}

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: redhat-quest-hpa
  labels:
    app: redhat-quest-game
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: redhat-quest-game
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15